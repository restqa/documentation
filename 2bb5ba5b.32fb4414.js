(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{110:function(e,n,t){"use strict";t.d(n,"a",(function(){return s})),t.d(n,"b",(function(){return d}));var r=t(0),i=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=i.a.createContext({}),u=function(e){var n=i.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=u(e.components);return i.a.createElement(p.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},m=i.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),s=u(t),m=r,d=s["".concat(l,".").concat(m)]||s[m]||b[m]||a;return t?i.a.createElement(d,o(o({ref:n},p),{},{components:t})):i.a.createElement(d,o({ref:n},p))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,l=new Array(a);l[0]=m;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<a;p++)l[p]=t[p];return i.a.createElement.apply(null,l)}return i.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},68:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return l})),t.d(n,"metadata",(function(){return o})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return u}));var r=t(2),i=t(6),a=(t(0),t(110)),l={id:"config-faker-plugin",sidebar_label:"Configuration",title:"Enable the Faker Plugin"},o={unversionedId:"tests/plugins/config-faker-plugin",id:"tests/plugins/config-faker-plugin",isDocsHomePage:!1,title:"Enable the Faker Plugin",description:"Generate fake data for Test Scenarios",source:"@site/docs/tests/plugins/config-faker-plugin.md",slug:"/tests/plugins/config-faker-plugin",permalink:"/tests/plugins/config-faker-plugin",editUrl:"https://github.com/restqa/documentation/edit/master/docs/tests/plugins/config-faker-plugin.md",version:"current",sidebar_label:"Configuration",sidebar:"someSidebar",previous:{title:"Then: Describe an expected outcome",permalink:"/tests/restqapi/then"},next:{title:"Gherkin References",permalink:"/tests/faker-plugin/features"}},c=[{value:"Introduction",id:"introduction",children:[]},{value:"Installation",id:"installation",children:[{value:"Example",id:"example",children:[]}]},{value:"Options",id:"options",children:[{value:"environments[].plugins.name",id:"environmentspluginsname",children:[]},{value:"environments[].plugins.config.locale",id:"environmentspluginsconfiglocale",children:[]},{value:"environments[].plugins.config.prefix",id:"environmentspluginsconfigprefix",children:[]}]}],p={rightToc:c};function u(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Generate fake data for Test Scenarios")),Object(a.b)("h2",{id:"introduction"},"Introduction"),Object(a.b)("p",null,"Are you not fed up of using John Doe in your test automation? \ud83d\ude06 "),Object(a.b)("p",null,"Or What will be the behavior of your product  on the production while using real data?"),Object(a.b)("p",null,"Thjs a good question right? And The best way to answer to it is to start thinking of having test scenario that are using different data each time."),Object(a.b)("p",null,"This should help you on doint more exploration testing... And this exactly how this plugin want to help you."),Object(a.b)("p",null,"Once installed this plugin will extend the RestQA capability in order to generate fake data on your scenario."),Object(a.b)("p",null,"This plugins is based on the ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/Marak/faker.js"}),"faker.js")," library"),Object(a.b)("h2",{id:"installation"},"Installation"),Object(a.b)("p",null,"You will need to use npm:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"npm install @restqa/faker-plugin\n")),Object(a.b)("p",null,"Then in your ",Object(a.b)("inlineCode",{parentName:"p"},".restqa.yml")," configuration file you will have to add the follow snippet under the ",Object(a.b)("inlineCode",{parentName:"p"},"environments.*.plugins")," section:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"- name: @restqa/faker-plugin\n  config:\n    locale: 'en' \n    prefix: 'faker'\n")),Object(a.b)("h3",{id:"example"},"Example"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml",metastring:'title=".restqa.yml" {13-16}',title:'".restqa.yml"',"{13-16}":!0}),"version: 0.0.1\nmetadata:\n  code: EXAMPLE\n  name: Example app\n  description: This is the example app description\nenvironments:\n  - name: uat\n    default: true\n    plugins:\n      - name: @restqa/restqapi\n        config:\n          url: https://uat.api.restqa.io\n      - name: @restqa/faker-plugin\n       config:\n         locale: 'fr' # default en\n         prefix: 'faker' # the prefix used for the place holders\n    outputs:\n      - type: discord\n        enabled: true\n        config: \n          url: http://example.discord.com\n")),Object(a.b)("h2",{id:"options"},"Options"),Object(a.b)("h3",{id:"environmentspluginsname"},"environments[].plugins.name"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"Type:")," ",Object(a.b)("inlineCode",{parentName:"li"},"string")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"Required:")," ",Object(a.b)("inlineCode",{parentName:"li"},"yes")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"value")," ",Object(a.b)("inlineCode",{parentName:"li"},"@restqa/faker-plugin"))),Object(a.b)("p",null,"Define plugin name"),Object(a.b)("h3",{id:"environmentspluginsconfiglocale"},"environments[].plugins.config.locale"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"Type:")," ",Object(a.b)("inlineCode",{parentName:"li"},"string")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"Required:")," ",Object(a.b)("inlineCode",{parentName:"li"},"no")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"Default")," ",Object(a.b)("inlineCode",{parentName:"li"},"en"))),Object(a.b)("p",null,"The local to use in order to generate fake data ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/Marak/Faker.js#Localization"}),"available values")),Object(a.b)("h3",{id:"environmentspluginsconfigprefix"},"environments[].plugins.config.prefix"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"Type:")," ",Object(a.b)("inlineCode",{parentName:"li"},"string")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"Required:")," ",Object(a.b)("inlineCode",{parentName:"li"},"no")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"Default")," ",Object(a.b)("inlineCode",{parentName:"li"},"faker"))),Object(a.b)("p",null,"The prefix to identify the placeholder that required to be faked (example: ",Object(a.b)("inlineCode",{parentName:"p"},"{{ faker.music.genre }}"),")"))}u.isMDXComponent=!0}}]);