(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{112:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return O}));var n=a(0),r=a.n(n);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function b(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=r.a.createContext({}),p=function(e){var t=r.a.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):b(b({},t),e)),a},s=function(e){var t=p(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},j=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,c=e.parentName,o=i(e,["components","mdxType","originalType","parentName"]),s=p(a),j=n,O=s["".concat(c,".").concat(j)]||s[j]||u[j]||l;return a?r.a.createElement(O,b(b({ref:t},o),{},{components:a})):r.a.createElement(O,b({ref:t},o))}));function O(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,c=new Array(l);c[0]=j;var b={};for(var i in t)hasOwnProperty.call(t,i)&&(b[i]=t[i]);b.originalType=e,b.mdxType="string"==typeof e?e:n,c[1]=b;for(var o=2;o<l;o++)c[o]=a[o];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,a)}j.displayName="MDXCreateElement"},144:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/restqa-steps-719e734b2c30c835b81248b11a5ce52e.gif"},66:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return b})),a.d(t,"rightToc",(function(){return i})),a.d(t,"default",(function(){return p}));var n=a(2),r=a(6),l=(a(0),a(112)),c={id:"cli",title:"Cli"},b={unversionedId:"api/cli",id:"api/cli",isDocsHomePage:!1,title:"Cli",description:"Start a new restqa project",source:"@site/docs/api/cli.md",slug:"/api/cli",permalink:"/api/cli",editUrl:"https://github.com/restqa/documentation/edit/master/docs/api/cli.md",version:"current",sidebar:"someSidebar",previous:{title:"Artillery integration",permalink:"/performance/artillery"},next:{title:"API Reference",permalink:"/api/api-reference"}},i=[{value:"Start a new restqa project",id:"start-a-new-restqa-project",children:[]},{value:"Install a new integration",id:"install-a-new-integration",children:[]},{value:"Step definition",id:"step-definition",children:[{value:"Given",id:"given",children:[]},{value:"When",id:"when",children:[]},{value:"Then",id:"then",children:[]}]},{value:"Run the test",id:"run-the-test",children:[]},{value:"Example project",id:"example-project",children:[]},{value:"Generate Scenario (curl)",id:"generate-scenario-curl",children:[]}],o={rightToc:i};function p(e){var t=e.components,c=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},o,c,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"start-a-new-restqa-project"},"Start a new restqa project"),Object(l.b)("p",null,"As mentioned from the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/getting-started/quickstart"}),"getting started page"),", in order to run your test automation using RestQA you will need to have a ",Object(l.b)("inlineCode",{parentName:"p"},".restqa.yml")," file into your folder."),Object(l.b)("p",null,"Otherwise RestQA client provides a command to pre-configure it for your project."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"restqa init\n")),Object(l.b)("p",null,"You can also initialized your project without answering the question by using the command : "),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"restqa init -y\n")),Object(l.b)("h2",{id:"install-a-new-integration"},"Install a new integration"),Object(l.b)("p",null,"Retrieve the list of available integration:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"restqa install \n")),Object(l.b)("p",null,"If you want to install the Slack integration:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"restqa install slack\n")),Object(l.b)("p",null,"example:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"restqa install <INTEGRATION>\n")),Object(l.b)("h2",{id:"step-definition"},"Step definition"),Object(l.b)("p",null,"To get the list of different steps available for your scenario:"),Object(l.b)("h3",{id:"given"},"Given"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"restqa steps given\n")),Object(l.b)("h3",{id:"when"},"When"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"restqa steps when\n")),Object(l.b)("h3",{id:"then"},"Then"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"restqa steps then\n")),Object(l.b)("p",null,"Example: "),Object(l.b)("p",null,Object(l.b)("img",{alt:"cli steps example",src:a(144).default})),Object(l.b)("p",null,"A few options are available :"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameter"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Alias"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"}," --tag")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"-t")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Filter the step to a specific keyword"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"--config")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"-c")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Specify the configuration file to use"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},".restqa.yml"))))),Object(l.b)("h2",{id:"run-the-test"},"Run the test"),Object(l.b)("p",null,"You can run the test by using the command"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"restqa run\n")),Object(l.b)("p",null,"or  "),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"restqa r\n")),Object(l.b)("p",null,"A few options are available:"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameter"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Alias"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"--config")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"-c")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Specify the configuration file to use"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},".restqa.yml"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"}," --env")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"-e")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Specify the environement to pick from the configuration file"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Default environment in the config")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"}," --tag")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"-t")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Specify the tag to pre-select features or scenarios"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}))))),Object(l.b)("h2",{id:"example-project"},"Example project"),Object(l.b)("p",null,"RestQA provides a simple example that you can run using the command:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"restqa example\n")),Object(l.b)("p",null,"or  "),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"restqa ex\n")),Object(l.b)("h2",{id:"generate-scenario-curl"},"Generate Scenario (curl)"),Object(l.b)("p",null,"If your API is already developed and you want a test scenario to check the non-regression, the best is just to generate a scenario from your curl command."),Object(l.b)("p",null,"Usage : "),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"restqa generate curl https://jsonplaceholder.typicode.com/todos/1\n")),Object(l.b)("p",null,"Output (console):"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-gherkin"}),'Given I have the api gateway hosted on "https://jsonplaceholder.typicode.com"\n  And I have the path "/todos/1"\n  And I have the method "GET"\nWhen I run the API\nThen I should receive a response with the status 200\n  And the response body should be equal to:\n  """\n{\n  "userId": 1,\n  "id": 1,\n  "title": "delectus aut autem",\n  "completed": false\n}\n  """\n')),Object(l.b)("p",null,"If you want to export the content into a file, you will need to use the ",Object(l.b)("inlineCode",{parentName:"p"},"-o")," options"),Object(l.b)("p",null,"To export the generated scenario into the file Generated Scenario into the ",Object(l.b)("inlineCode",{parentName:"p"},"generated.feature")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"restqa generate  curl https://jsonplaceholder.typicode.com/todos/1 -o generated.feature\n")))}p.isMDXComponent=!0}}]);