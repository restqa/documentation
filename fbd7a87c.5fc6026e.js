(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{101:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),u=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=u(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=u(n),m=r,d=p["".concat(o,".").concat(m)]||p[m]||b[m]||i;return n?a.a.createElement(d,s(s({ref:t},l),{},{components:n})):a.a.createElement(d,s({ref:t},l))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},140:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/restqa-init-351d4c04d889ff271184d43b09e71333.gif"},97:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return u}));var r=n(2),a=n(6),i=(n(0),n(101)),o={id:"quickstart",title:"Quickstart"},s={unversionedId:"getting-started/quickstart",id:"getting-started/quickstart",isDocsHomePage:!1,title:"Quickstart",description:"Pre requisite",source:"@site/docs/getting-started/quickstart.md",slug:"/getting-started/quickstart",permalink:"/getting-started/quickstart",editUrl:"https://github.com/restqa/documentation/edit/master/docs/getting-started/quickstart.md",version:"current",sidebar:"someSidebar",previous:{title:"How can I contribute ?",permalink:"/contributing"},next:{title:"Installation",permalink:"/getting-started/installation"}},c=[{value:"Pre requisite",id:"pre-requisite",children:[]},{value:"Install with npm",id:"install-with-npm",children:[]},{value:"Initialize your first project",id:"initialize-your-first-project",children:[]},{value:"Run the Sample test scenario.",id:"run-the-sample-test-scenario",children:[]}],l={rightToc:c};function u(e){var t=e.components,o=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},l,o,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h3",{id:"pre-requisite"},"Pre requisite"),Object(i.b)("p",null,"In order to run you will to have :"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"NodeJs installed"),Object(i.b)("li",{parentName:"ul"},"Npm or Yarn installed")),Object(i.b)("h2",{id:"install-with-npm"},"Install with npm"),Object(i.b)("p",null,"To install RestQA globally run the command:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"npm install @restqa/restqa -g\n")),Object(i.b)("h2",{id:"initialize-your-first-project"},"Initialize your first project"),Object(i.b)("p",null,"In order to initialize your first project run the command:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"restqa init -y\n")),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"-y")," option will create the project using the default values."),Object(i.b)("p",null,Object(i.b)("img",{alt:"restqa init",src:n(140).default})),Object(i.b)("p",null,"And Voila! Your first test has been setup using the RestQA demo environment."),Object(i.b)("p",null,"A typical RestQA project will have the following source file structure:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"- .restqa.yml            # RestQA configuration file\n- test/\n  - integrations/\n    - welcome.feature    # Sample test scenario\n")),Object(i.b)("p",null,"You can look at your folder and you will see the RestQA configuration file ",Object(i.b)("inlineCode",{parentName:"p"},".restqa.yml"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml",metastring:'title=".restqa.yml"',title:'".restqa.yml"'}),"version: 0.0.1\nmetadata:\n  code: APP\n  name: app\n  description: Configuration generated by restqa init\nenvironments:\n  - name: local\n    default: true\n    plugins:\n      - name: restqapi\n        config:\n          url: https://api.restqa.io\n    outputs:\n      - type: html\n        enabled: true\n      - type: file\n        enabled: true\n        config:\n          path: restqa-result.json\n")),Object(i.b)("p",null,"And your first sample test scenario was created on the file: ",Object(i.b)("inlineCode",{parentName:"p"},"./tests/integration/welcome-restqa.feature")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-gherkin",metastring:'title="./tests/integration/welcome-restqa.feature"',title:'"./tests/integration/welcome-restqa.feature"'}),'Feature: Welcome to the RestQA community\n\nScenario: Get the list of useful RestQA resources\nGiven I have the api gateway hosted on "https://restqa.io"\n  And I have the path "/welcome.json"\n  And I have the method "GET"\nWhen I run the API\nThen I should receive a response with the status 200\n  And the response body should be equal to:\n  """\n{\n  "documentation": {\n    "description": "Access to the official documentation",\n    "href": "https://docs.restqa.io"\n  },\n  "examples": {\n    "description": "A series of RestQA implementation examples",\n    "href": "https://github.com/restqa/restqa-example"\n  },\n  "message": "Thank you for installing RestQa, Let\'s continue our Test Automation together",\n  "promotion": {\n    "github": {\n      "action": "Give us a a star",\n      "href": "https://github.com/restqa/restqa"\n    },\n    "linkedin": {\n      "action": "Follow us",\n      "href": "https://linkedin.com/company/restqa"\n    },\n    "medium": {\n      "action": "Follow us",\n      "href": "https://medium.com/restqa"\n    },\n    "twitter": {\n      "action": "Follow us",\n      "href": "https://twitter.com/restqa"\n    },\n    "youtube": {\n      "action": "Subscribe to the channel",\n      "href": "https://www.youtube.com/channel/UCdT6QenNLmnxNT-aT8nYq_Q"\n    }\n  },\n  "sources": {\n    "description": "RestQa is Open Source, feel free to contribute",\n    "href": "https://github.com/restqa"\n  },\n  "support": {\n    "description": "Please ask and answer questions here.",\n    "href": "https://discord.gg/q8pKfsyq67"\n  }\n}\n  """\n')),Object(i.b)("h2",{id:"run-the-sample-test-scenario"},"Run the Sample test scenario."),Object(i.b)("p",null,"From now you can run the test scenario using the command"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"restqa run\n")),Object(i.b)("p",null,"And Voila your first test scenario has been executed and passed!"),Object(i.b)("p",null,"You can see the result into the ",Object(i.b)("inlineCode",{parentName:"p"},"./report")," folder."))}u.isMDXComponent=!0}}]);