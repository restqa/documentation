(self.webpackChunkrestqa=self.webpackChunkrestqa||[]).push([[9176],{3905:function(e,t,a){"use strict";a.d(t,{kt:function(){return d}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),d=p(a),u=r,f=d["".concat(s,".").concat(u)]||d[u]||c[u]||l;return a?n.createElement(f,o(o({ref:t},m),{},{components:a})):n.createElement(f,o({ref:t},m))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},695:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return c},default:function(){return d}});var n=a(4034),r=a(9973),l=(a(7294),a(3905)),o=["components"],i={id:"excel",sidebar_label:"Excel",title:"Integrate with Excel (CSV)"},s=void 0,p={unversionedId:"data/excel",id:"data/excel",isDocsHomePage:!1,title:"Integrate with Excel (CSV)",description:"Data Reuseability to avoid the manual work is what RestQA assures to its users.",source:"@site/docs/data/excel.md",sourceDirName:"data",slug:"/data/excel",permalink:"/data/excel",editUrl:"https://github.com/restqa/documentation/edit/master/docs/data/excel.md",version:"current",frontMatter:{id:"excel",sidebar_label:"Excel",title:"Integrate with Excel (CSV)"},sidebar:"someSidebar",previous:{title:"Google Spreadsheet",permalink:"/data/google-spreadsheet"},next:{title:"File system",permalink:"/data/storage"}},c=[{value:"Usage",id:"usage",children:[]},{value:"Pre-requisite",id:"pre-requisite",children:[]},{value:"Configuration",id:"configuration",children:[]},{value:"Command",id:"command",children:[{value:"Options",id:"options",children:[]}]}],m={toc:c};function d(e){var t=e.components,i=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,n.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Data Reuseability to avoid the manual work is what RestQA assures to its users. "),(0,l.kt)("p",null,"The test data plays a vital role for the API testing as it contain majority of the test case data that is passed as parameters to the API."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Excel (csv)")," is one of the many data sources that RestQA integrates without any hassle."),(0,l.kt)("h2",{id:"usage"},"Usage"),(0,l.kt)("p",null,"See the following dataset example locate on the file : ",(0,l.kt)("strong",{parentName:"p"},"./tests/data/users.csv"),":"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Excell",src:a(7049).Z})),(0,l.kt)("p",null,"We want to access to the ",(0,l.kt)("em",{parentName:"p"},"Cooper")," lastname, as you can see it's located into :"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"filename : ",(0,l.kt)("em",{parentName:"li"},"users")),(0,l.kt)("li",{parentName:"ul"},"row : ",(0,l.kt)("em",{parentName:"li"},"4")),(0,l.kt)("li",{parentName:"ul"},"Column name : ",(0,l.kt)("em",{parentName:"li"},"lastname"))),(0,l.kt)("p",null,"This means if we want to use this information into one of our scenario we will need to proceed the following way :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-gherkin"},'Then the response body at "firstname" should equal "{{ users.4.lastname }}"\n')),(0,l.kt)("p",null,"During the processing it will be interpreted as :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'Then the response body at "firstname" should equal "Cooper"\n')),(0,l.kt)("p",null,"The format should follow the pattern : ",(0,l.kt)("inlineCode",{parentName:"p"},"{{ <FILENAME>.<ROW>.<COLUMN NAME> }}")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"If you want to use a custom interpolation charaters on the placeholder instead of ",(0,l.kt)("inlineCode",{parentName:"p"},"{{"),"  you can change the ",(0,l.kt)("inlineCode",{parentName:"p"},"data.startSymbol")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"data.endSymbol")," into you ",(0,l.kt)("inlineCode",{parentName:"p"},".restqa.yaml"))),(0,l.kt)("h2",{id:"pre-requisite"},"Pre-requisite"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"1 minute  \ud83d\ude80"),(0,l.kt)("li",{parentName:"ul"},"Create new csv file on a specific folder (example : ./tests/data)"),(0,l.kt)("li",{parentName:"ul"},"Valid RestQA config file.")),(0,l.kt)("h2",{id:"configuration"},"Configuration"),(0,l.kt)("p",null,"The parameters per call are just required to be entered in form of rows. Each rows represent a set of parameters being passed to API during a single call."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The Project's ",(0,l.kt)("strong",{parentName:"p"},"restqa.yml")," file will contain the details about the Google Spreadsheet as shown below ",(0,l.kt)("strong",{parentName:"p"},"environments.data"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'{11-15} title=".restqa.yml"',"{11-15}":!0,title:'".restqa.yml"'},"---\n\nversion: 0.0.1\nmetadata:\n  code: SAMPLE\n  name: Sample running on example.com\n  description: E2E test of the public api\nenvironments:\n  - name: sandbox\n    default: true\n    data:\n      channel: 'csv'\n      config:\n        folder: 'test/data'\n        delimiter: ','\n    plugins:\n      - name: restqapi\n        config:\n          url: https://api-sandbox.example.com\n")),(0,l.kt)("p",null,"Once the ",(0,l.kt)("strong",{parentName:"p"},"restqa.yml")," is updated as per the Csv, the Test Suite takes it up for the next process where the columns and rows are defined accordingly."),(0,l.kt)("h2",{id:"command"},"Command"),(0,l.kt)("p",null,"If you don't want configure this part manually you can also use the command line :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"restqa install excel\n")),(0,l.kt)("h3",{id:"options"},"Options"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"th"},"Property")),(0,l.kt)("th",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"th"},"Description")),(0,l.kt)("th",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"th"},"Default")))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"channel")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The data channel (csv in our case)"),(0,l.kt)("td",{parentName:"tr",align:"left"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"config.folder")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The folder where the csv files are located"),(0,l.kt)("td",{parentName:"tr",align:"left"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"config.delimiter")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The csv column delimiter character"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},","))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"startSymbol")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Used for configuring the interpolation markup"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"{{"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"endSymbol")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Used for configuring the interpolation markup"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"}}"))))))}d.isMDXComponent=!0},7049:function(e,t,a){"use strict";t.Z=a.p+"assets/images/screenshot-excel-4783fa4f59ea0155ea545e4d201dbd0f.png"}}]);