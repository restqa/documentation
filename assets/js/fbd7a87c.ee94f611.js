(self.webpackChunkrestqa=self.webpackChunkrestqa||[]).push([[3039],{3905:function(e,t,n){"use strict";n.d(t,{kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,h=d["".concat(l,".").concat(m)]||d[m]||c[m]||i;return n?r.createElement(h,s(s({ref:t},p),{},{components:n})):r.createElement(h,s({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=p;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var u=2;u<i;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},694:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var r=n(4034),a=n(9973),i=(n(7294),n(3905)),s=["components"],o={id:"quickstart",title:"Quickstart"},l=void 0,u={unversionedId:"getting-started/quickstart",id:"getting-started/quickstart",isDocsHomePage:!1,title:"Quickstart",description:"Pre requisite",source:"@site/docs/getting-started/quickstart.md",sourceDirName:"getting-started",slug:"/getting-started/quickstart",permalink:"/getting-started/quickstart",editUrl:"https://github.com/restqa/documentation/edit/master/docs/getting-started/quickstart.md",version:"current",frontMatter:{id:"quickstart",title:"Quickstart"},sidebar:"someSidebar",previous:{title:"Contributing",permalink:"/contributing"},next:{title:"Installation",permalink:"/getting-started/installation"}},c=[{value:"Pre requisite",id:"pre-requisite",children:[]},{value:"Install with npm",id:"install-with-npm",children:[]},{value:"Initialize your first project",id:"initialize-your-first-project",children:[]},{value:"Run the Sample test scenario.",id:"run-the-sample-test-scenario",children:[]},{value:"Access to the RestQA Dashboard",id:"access-to-the-restqa-dashboard",children:[]}],p={toc:c};function d(e){var t=e.components,o=(0,a.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"pre-requisite"},"Pre requisite"),(0,i.kt)("p",null,"In order to run you will to have :"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"NodeJs installed"),(0,i.kt)("li",{parentName:"ul"},"Npm or Yarn installed")),(0,i.kt)("h2",{id:"install-with-npm"},"Install with npm"),(0,i.kt)("p",null,"To install RestQA globally run the command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @restqa/restqa -g\n")),(0,i.kt)("h2",{id:"initialize-your-first-project"},"Initialize your first project"),(0,i.kt)("p",null,"In order to initialize your first project run the command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"restqa init -y\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"-y")," option will create the project using the default values."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"restqa init",src:n(653).Z})),(0,i.kt)("p",null,"And Voila! Your first test has been setup using the RestQA demo environment."),(0,i.kt)("p",null,"A typical RestQA project will have the following source file structure:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"- .restqa.yml            # RestQA configuration file\n- test/\n  - integrations/\n    - welcome.feature    # Sample test scenario\n")),(0,i.kt)("p",null,"You can look at your folder and you will see the RestQA configuration file ",(0,i.kt)("inlineCode",{parentName:"p"},".restqa.yml"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".restqa.yml"',title:'".restqa.yml"'},"version: 0.0.1\nmetadata:\n  code: APP\n  name: app\n  description: Configuration generated by restqa init\nenvironments:\n  - name: local\n    default: true\n    plugins:\n      - name: restqapi\n        config:\n          url: https://api.restqa.io\n    outputs:\n      - type: html\n        enabled: true\n      - type: file\n        enabled: true\n        config:\n          path: restqa-result.json\n")),(0,i.kt)("p",null,"And your first sample test scenario was created on the file: ",(0,i.kt)("inlineCode",{parentName:"p"},"./tests/integration/welcome-restqa.feature")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gherkin",metastring:'title="./tests/integration/welcome-restqa.feature"',title:'"./tests/integration/welcome-restqa.feature"'},'Feature: Welcome to the RestQA community\n\nScenario: Get the list of useful RestQA resources\nGiven I have the api gateway hosted on "https://restqa.io"\n  And I have the path "/welcome.json"\n  And I have the method "GET"\nWhen I run the API\nThen I should receive a response with the status 200\n  And the response body should be equal to:\n  """\n{\n  "documentation": {\n    "description": "Access to the official documentation",\n    "href": "https://docs.restqa.io"\n  },\n  "examples": {\n    "description": "A series of RestQA implementation examples",\n    "href": "https://github.com/restqa/restqa-example"\n  },\n  "message": "Thank you for installing RestQa, Let\'s continue our Test Automation together",\n  "promotion": {\n    "github": {\n      "action": "Give us a a star",\n      "href": "https://github.com/restqa/restqa"\n    },\n    "linkedin": {\n      "action": "Follow us",\n      "href": "https://linkedin.com/company/restqa"\n    },\n    "medium": {\n      "action": "Follow us",\n      "href": "https://medium.com/restqa"\n    },\n    "twitter": {\n      "action": "Follow us",\n      "href": "https://twitter.com/restqa"\n    },\n    "youtube": {\n      "action": "Subscribe to the channel",\n      "href": "https://www.youtube.com/channel/UCdT6QenNLmnxNT-aT8nYq_Q"\n    }\n  },\n  "sources": {\n    "description": "RestQa is Open Source, feel free to contribute",\n    "href": "https://github.com/restqa"\n  },\n  "support": {\n    "description": "Please ask and answer questions here.",\n    "href": "https://discord.gg/q8pKfsyq67"\n  }\n}\n  """\n')),(0,i.kt)("h2",{id:"run-the-sample-test-scenario"},"Run the Sample test scenario."),(0,i.kt)("p",null,"From now you can run the test scenario using the command"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"restqa run\n")),(0,i.kt)("p",null,"And Voila your first test scenario has been executed and passed!"),(0,i.kt)("p",null,"You can see the result into the ",(0,i.kt)("inlineCode",{parentName:"p"},"./report")," folder."),(0,i.kt)("h2",{id:"access-to-the-restqa-dashboard"},"Access to the RestQA Dashboard"),(0,i.kt)("p",null,"If you are looking for a user friendly interface, take a look at the restqa dashboard, by using the command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"restqa dashboard\n")),(0,i.kt)("p",null,"Example:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"screenshot dashboard",src:n(3289).Z})),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/getting-started/dashboard"},"More information on this feature")))}d.isMDXComponent=!0},653:function(e,t,n){"use strict";t.Z=n.p+"assets/images/restqa-init-351d4c04d889ff271184d43b09e71333.gif"},3289:function(e,t,n){"use strict";t.Z=n.p+"assets/images/screenshot-dashboard-eeac345c91b0518ea794773e12910959.png"}}]);