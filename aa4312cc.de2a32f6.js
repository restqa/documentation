(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{110:function(e,t,n){"use strict";n.d(t,"a",(function(){return g})),n.d(t,"b",(function(){return f}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),u=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},g=function(e){var t=u(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),g=u(n),d=a,f=g["".concat(o,".").concat(d)]||g[d]||p[d]||i;return n?r.a.createElement(f,s(s({ref:t},c),{},{components:n})):r.a.createElement(f,s({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},97:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return u}));var a=n(2),r=n(6),i=(n(0),n(110)),o={id:"given",sidebar_label:"Given",title:"Given: Describe your context"},s={unversionedId:"tests/faker-plugin/given",id:"tests/faker-plugin/given",isDocsHomePage:!1,title:"Given: Describe your context",description:"Language",source:"@site/docs/tests/faker-plugin/given.md",slug:"/tests/faker-plugin/given",permalink:"/tests/faker-plugin/given",editUrl:"https://github.com/restqa/documentation/edit/master/docs/tests/faker-plugin/given.md",version:"current",sidebar_label:"Given",sidebar:"someSidebar",previous:{title:"Gherkin References",permalink:"/tests/faker-plugin/features"},next:{title:"Integrate with Google Spreadsheet",permalink:"/data/google-spreadsheet"}},l=[{value:"Language",id:"language",children:[{value:"Given I use the {string} language to generate fake data",id:"given-i-use-the-string-language-to-generate-fake-data",children:[]}]},{value:"Generate",id:"generate",children:[{value:"Given I generate a fake data for {string} and store it into the dataset as {string}",id:"given-i-generate-a-fake-data-for-string-and-store-it-into-the-dataset-as-string",children:[]}]}],c={rightToc:l};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"language"},"Language"),Object(i.b)("h3",{id:"given-i-use-the-string-language-to-generate-fake-data"},"Given I use the {string} language to generate fake data"),Object(i.b)("p",null,"Define the locale to use during the fake data generation.\nList of language available ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/Marak/Faker.js#Localization"}),"here")),Object(i.b)("p",null,"Example:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-gherkin"}),'\nGiven I use the "fr" language to generate fake data\nGiven I use the "nl_BE" language to generate fake data\nGiven fake locale = "cz"\n\n')),Object(i.b)("p",null,"Example: ",Object(i.b)("em",{parentName:"p"},"Placeholder from datasets")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-gherkin"}),"\nGiven I use the {{ myLocale }} language to generate fake data\nGiven fake locale = {{ myLocale }}\n\n")),Object(i.b)("h2",{id:"generate"},"Generate"),Object(i.b)("h3",{id:"given-i-generate-a-fake-data-for-string-and-store-it-into-the-dataset-as-string"},"Given I generate a fake data for {string} and store it into the dataset as {string}"),Object(i.b)("p",null,"Generate a fake data and store it into the dataset in order to use it into an other step definition"),Object(i.b)("p",null,"Example:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-gherkin"}),'\nGiven I generate a fake data for "name.firstName" and store it into the dataset as "firstName"\nGiven fake.data "name.lastName" => "name.lastName"\nThen the response body at "user.lastname" should not be equal to {{ lastName }}\n\n')))}u.isMDXComponent=!0}}]);